{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of Final Version History and Epoch Changable - Model12-2 32-64NormalFirst","provenance":[{"file_id":"1NVbGT6FOhGmPfPSrEab32hRHQexE4vcx","timestamp":1592879523184},{"file_id":"12n4xO2ivskpAVJZL_i3pvDSDFDonAFUe","timestamp":1592074060486},{"file_id":"1OgGroPiTbVQlN8gwBsSiKFLee7NbFeew","timestamp":1591570048675}],"collapsed_sections":[],"toc_visible":true,"machine_shape":"hm","authorship_tag":"ABX9TyNCpkAFjRtOxxQtEdGowJu/"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"hQVmyxa4wy6p","colab_type":"code","colab":{}},"source":["# !rm -r *"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"v-T0qS65Af76","colab_type":"code","colab":{}},"source":["!rm -r *optflow*\n","!rm -r *Process*\n","!rm *.h5"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"L6dxH5l5Ag1V","colab_type":"text"},"source":["# **Welcome to the final version of training and testing**"]},{"cell_type":"code","metadata":{"id":"3aHPAT3RnoX4","colab_type":"code","colab":{}},"source":["nepoch=500\n","nhistory=2\n","LR=0.0001\n","! echo {nepoch}\n","! echo {nhistory}\n","! echo {LR}"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"s7kOQxOMDECc","colab_type":"text"},"source":["## **Training with normal image** "]},{"cell_type":"code","metadata":{"id":"t_RTlrpYBc6I","colab_type":"code","colab":{}},"source":["!python speedchallenge.py --mode=train --epoch {nepoch} --history {nhistory}  --split_start=7700 --split_end=12100 --model final.h5 --LR {LR} train.mp4 train.txt --resume --wipe"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"XVZUGm5nzfz_","colab_type":"code","colab":{}},"source":["!python speedchallenge.py --mode=test  --history {nhistory}  --model final.h5  train_Flipped_for_testing.mp4 train_Flipped_for_testing.txt"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"X6lPTaiXMHWg","colab_type":"code","colab":{}},"source":["!python speedchallenge.py --mode=test  --history {nhistory}  --model final.h5  train.mp4 train.txt"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"FyE30U_r0Bp5","colab_type":"text"},"source":["## **Training with flipped image**"]},{"cell_type":"code","metadata":{"id":"cXpb18aXDSFJ","colab_type":"code","colab":{}},"source":["!python speedchallenge.py --mode=train --epoch {nepoch} --history {nhistory} --split_start=7700 --split_end=12100 --model final.h5  --LR {LR} train_Flipped_for_training.mp4 train_Flipped_for_training.txt --resume --wipe"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"yUegq4Oj0Ka-","colab_type":"code","colab":{}},"source":["!python speedchallenge.py --mode=test  --history {nhistory}  --model final.h5  train_Flipped_for_testing.mp4 train_Flipped_for_testing.txt"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab_type":"code","id":"RaprcWYZMSKX","colab":{}},"source":["!python speedchallenge.py --mode=test  --history {nhistory}  --model final.h5  train.mp4 train.txt"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"c0MqFMe7z4EQ","colab_type":"text"},"source":["## **Training with augmentation normal image**"]},{"cell_type":"code","metadata":{"id":"iR9_vLugCtWb","colab_type":"code","colab":{}},"source":["!python speedchallenge.py --mode=train --epoch {nepoch} --history {nhistory}  --split_start=7700 --split_end=12100 --model final.h5  --LR {LR} --augment train.mp4 train.txt --resume --wipe"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab_type":"code","id":"HGpYvXqcz033","colab":{}},"source":["!python speedchallenge.py --mode=test  --history {nhistory}  --model final.h5  train_Flipped_for_testing.mp4 train_Flipped_for_testing.txt  "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab_type":"code","id":"5_frZ-nAMRLN","colab":{}},"source":["!python speedchallenge.py --mode=test  --history {nhistory}  --model final.h5  train.mp4 train.txt"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"2bbUlS7X0Ma_","colab_type":"text"},"source":["## **Training with Augmentation and Flipped image**"]},{"cell_type":"code","metadata":{"id":"wi1mUxsUY7lp","colab_type":"code","colab":{}},"source":["!python speedchallenge.py --mode=train --epoch {nepoch} --history {nhistory} --split_start=7700 --split_end=12100 --model final.h5  --LR {LR} --augment  train_Flipped_for_training.mp4 train_Flipped_for_training.txt --resume --wipe"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"s8M_eIB20Uk7","colab_type":"code","colab":{}},"source":["!python speedchallenge.py --mode=test  --history {nhistory}  --model final.h5  train_Flipped_for_testing.mp4 train_Flipped_for_testing.txt"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab_type":"code","id":"_yPi2-giMTA2","colab":{}},"source":["!python speedchallenge.py --mode=test  --history {nhistory}  --model final.h5  train.mp4 train.txt"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"WtFFDhamD79m","colab_type":"text"},"source":["## **Predicting**"]},{"cell_type":"code","metadata":{"id":"mBlyDdhkD-y_","colab_type":"code","colab":{}},"source":["!python speedchallenge.py --mode=predict  --history {nhistory}  --model final.h5  test.mp4 outTestPrediction.txt"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"RiOUagC7E5Fb","colab_type":"text"},"source":["## **Making A video with predictions**"]},{"cell_type":"code","metadata":{"id":"2FrRZkZXE8Bb","colab_type":"code","colab":{}},"source":["video=r\"test.mp4\"\n","text=r\"outTestPrediction.txt\"\n","f = open(text, \"r\")\n","predictions=f.readlines()\n","predictions=list(predictions)\n","frameList=[]\n","\n","import cv2\n","import itertools\n","\n","cap = cv2.VideoCapture(video) \n","ret, frame = cap.read() \n","frameList.append(frame)     \n","while(ret): \n","      \n","    # Capture frames in the video \n","    ret, frame = cap.read() \n","    # we are ignoring the first frame\n","    # describe the type of font \n","    # to be used. \n","    \n","    # Display the resulting frame \n","    frameList.append(frame) \n","  \n","# change the length\n","prediction_count=len(predictions)\n","last_frame_index=len(frameList)-1\n","\n","frameList=frameList[last_frame_index-prediction_count+1:]\n","\n","for frame,prediction in zip(frameList,predictions):\n","    font = cv2.FONT_HERSHEY_SIMPLEX \n","    speed=str(prediction)\n","    # Use putText() method for \n","    # inserting text on video \n","    cv2.putText(frame,  \n","                speed,  \n","                (50, 50),  \n","                font, 1,  \n","                (0, 255, 255),  \n","                2,  \n","                cv2.LINE_4) \n","  \n","\n","\n","\n","\n","# release the cap object \n","cap.release() \n","fourcc = cv2.VideoWriter_fourcc(*'XVID')\n","out = cv2.VideoWriter('predictions.avi',fourcc, 20.0, (640,480))\n","for i in range(len(frameList)):\n","    out.write(frameList[i])\n","out.release() \n","\n","print(\"Prediciton video generated\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab_type":"code","id":"GlkqeKBHWRvY","colab":{}},"source":["!rm -r *optflow*"],"execution_count":null,"outputs":[]}]}